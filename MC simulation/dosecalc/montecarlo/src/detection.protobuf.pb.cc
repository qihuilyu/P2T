// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: detection.protobuf

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "detection.protobuf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace detection {

namespace {

const ::google::protobuf::Descriptor* pbDetectionEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pbDetectionEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* pbDetectedEvents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pbDetectedEvents_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_detection_2eprotobuf() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_detection_2eprotobuf() {
  protobuf_AddDesc_detection_2eprotobuf();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "detection.protobuf");
  GOOGLE_CHECK(file != NULL);
  pbDetectionEvent_descriptor_ = file->message_type(0);
  static const int pbDetectionEvent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectionEvent, globaltime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectionEvent, eventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectionEvent, detectorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectionEvent, energy_),
  };
  pbDetectionEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pbDetectionEvent_descriptor_,
      pbDetectionEvent::default_instance_,
      pbDetectionEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectionEvent, _has_bits_[0]),
      -1,
      -1,
      sizeof(pbDetectionEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectionEvent, _internal_metadata_),
      -1);
  pbDetectedEvents_descriptor_ = file->message_type(1);
  static const int pbDetectedEvents_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectedEvents, detectionevent_),
  };
  pbDetectedEvents_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pbDetectedEvents_descriptor_,
      pbDetectedEvents::default_instance_,
      pbDetectedEvents_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectedEvents, _has_bits_[0]),
      -1,
      -1,
      sizeof(pbDetectedEvents),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbDetectedEvents, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_detection_2eprotobuf);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pbDetectionEvent_descriptor_, &pbDetectionEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pbDetectedEvents_descriptor_, &pbDetectedEvents::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_detection_2eprotobuf() {
  delete pbDetectionEvent::default_instance_;
  delete pbDetectionEvent_reflection_;
  delete pbDetectedEvents::default_instance_;
  delete pbDetectedEvents_reflection_;
}

void protobuf_AddDesc_detection_2eprotobuf() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_detection_2eprotobuf() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022detection.protobuf\022\tdetection\"[\n\020pbDet"
    "ectionEvent\022\022\n\nglobalTime\030\001 \002(\001\022\017\n\007event"
    "Id\030\002 \002(\005\022\022\n\ndetectorId\030\003 \002(\005\022\016\n\006energy\030\004"
    " \002(\001\"G\n\020pbDetectedEvents\0223\n\016detectionEve"
    "nt\030\001 \003(\0132\033.detection.pbDetectionEvent", 197);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "detection.protobuf", &protobuf_RegisterTypes);
  pbDetectionEvent::default_instance_ = new pbDetectionEvent();
  pbDetectedEvents::default_instance_ = new pbDetectedEvents();
  pbDetectionEvent::default_instance_->InitAsDefaultInstance();
  pbDetectedEvents::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_detection_2eprotobuf);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_detection_2eprotobuf {
  StaticDescriptorInitializer_detection_2eprotobuf() {
    protobuf_AddDesc_detection_2eprotobuf();
  }
} static_descriptor_initializer_detection_2eprotobuf_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbDetectionEvent::kGlobalTimeFieldNumber;
const int pbDetectionEvent::kEventIdFieldNumber;
const int pbDetectionEvent::kDetectorIdFieldNumber;
const int pbDetectionEvent::kEnergyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbDetectionEvent::pbDetectionEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.pbDetectionEvent)
}

void pbDetectionEvent::InitAsDefaultInstance() {
}

pbDetectionEvent::pbDetectionEvent(const pbDetectionEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.pbDetectionEvent)
}

void pbDetectionEvent::SharedCtor() {
  _cached_size_ = 0;
  globaltime_ = 0;
  eventid_ = 0;
  detectorid_ = 0;
  energy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pbDetectionEvent::~pbDetectionEvent() {
  // @@protoc_insertion_point(destructor:detection.pbDetectionEvent)
  SharedDtor();
}

void pbDetectionEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void pbDetectionEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pbDetectionEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pbDetectionEvent_descriptor_;
}

const pbDetectionEvent& pbDetectionEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detection_2eprotobuf();
  return *default_instance_;
}

pbDetectionEvent* pbDetectionEvent::default_instance_ = NULL;

pbDetectionEvent* pbDetectionEvent::New(::google::protobuf::Arena* arena) const {
  pbDetectionEvent* n = new pbDetectionEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pbDetectionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:detection.pbDetectionEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(pbDetectionEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<pbDetectionEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(globaltime_, energy_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool pbDetectionEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.pbDetectionEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double globalTime = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &globaltime_)));
          set_has_globaltime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eventId;
        break;
      }

      // required int32 eventId = 2;
      case 2: {
        if (tag == 16) {
         parse_eventId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
          set_has_eventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_detectorId;
        break;
      }

      // required int32 detectorId = 3;
      case 3: {
        if (tag == 24) {
         parse_detectorId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &detectorid_)));
          set_has_detectorid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_energy;
        break;
      }

      // required double energy = 4;
      case 4: {
        if (tag == 33) {
         parse_energy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &energy_)));
          set_has_energy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.pbDetectionEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.pbDetectionEvent)
  return false;
#undef DO_
}

void pbDetectionEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.pbDetectionEvent)
  // required double globalTime = 1;
  if (has_globaltime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->globaltime(), output);
  }

  // required int32 eventId = 2;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eventid(), output);
  }

  // required int32 detectorId = 3;
  if (has_detectorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->detectorid(), output);
  }

  // required double energy = 4;
  if (has_energy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->energy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.pbDetectionEvent)
}

::google::protobuf::uint8* pbDetectionEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.pbDetectionEvent)
  // required double globalTime = 1;
  if (has_globaltime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->globaltime(), target);
  }

  // required int32 eventId = 2;
  if (has_eventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eventid(), target);
  }

  // required int32 detectorId = 3;
  if (has_detectorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->detectorid(), target);
  }

  // required double energy = 4;
  if (has_energy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->energy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.pbDetectionEvent)
  return target;
}

int pbDetectionEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:detection.pbDetectionEvent)
  int total_size = 0;

  if (has_globaltime()) {
    // required double globalTime = 1;
    total_size += 1 + 8;
  }

  if (has_eventid()) {
    // required int32 eventId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventid());
  }

  if (has_detectorid()) {
    // required int32 detectorId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->detectorid());
  }

  if (has_energy()) {
    // required double energy = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
int pbDetectionEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:detection.pbDetectionEvent)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double globalTime = 1;
    total_size += 1 + 8;

    // required int32 eventId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventid());

    // required int32 detectorId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->detectorid());

    // required double energy = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pbDetectionEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection.pbDetectionEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const pbDetectionEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const pbDetectionEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection.pbDetectionEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection.pbDetectionEvent)
    MergeFrom(*source);
  }
}

void pbDetectionEvent::MergeFrom(const pbDetectionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection.pbDetectionEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_globaltime()) {
      set_globaltime(from.globaltime());
    }
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
    if (from.has_detectorid()) {
      set_detectorid(from.detectorid());
    }
    if (from.has_energy()) {
      set_energy(from.energy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void pbDetectionEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection.pbDetectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbDetectionEvent::CopyFrom(const pbDetectionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection.pbDetectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbDetectionEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void pbDetectionEvent::Swap(pbDetectionEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbDetectionEvent::InternalSwap(pbDetectionEvent* other) {
  std::swap(globaltime_, other->globaltime_);
  std::swap(eventid_, other->eventid_);
  std::swap(detectorid_, other->detectorid_);
  std::swap(energy_, other->energy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pbDetectionEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pbDetectionEvent_descriptor_;
  metadata.reflection = pbDetectionEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pbDetectionEvent

// required double globalTime = 1;
bool pbDetectionEvent::has_globaltime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void pbDetectionEvent::set_has_globaltime() {
  _has_bits_[0] |= 0x00000001u;
}
void pbDetectionEvent::clear_has_globaltime() {
  _has_bits_[0] &= ~0x00000001u;
}
void pbDetectionEvent::clear_globaltime() {
  globaltime_ = 0;
  clear_has_globaltime();
}
 double pbDetectionEvent::globaltime() const {
  // @@protoc_insertion_point(field_get:detection.pbDetectionEvent.globalTime)
  return globaltime_;
}
 void pbDetectionEvent::set_globaltime(double value) {
  set_has_globaltime();
  globaltime_ = value;
  // @@protoc_insertion_point(field_set:detection.pbDetectionEvent.globalTime)
}

// required int32 eventId = 2;
bool pbDetectionEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void pbDetectionEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
void pbDetectionEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
void pbDetectionEvent::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
 ::google::protobuf::int32 pbDetectionEvent::eventid() const {
  // @@protoc_insertion_point(field_get:detection.pbDetectionEvent.eventId)
  return eventid_;
}
 void pbDetectionEvent::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:detection.pbDetectionEvent.eventId)
}

// required int32 detectorId = 3;
bool pbDetectionEvent::has_detectorid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void pbDetectionEvent::set_has_detectorid() {
  _has_bits_[0] |= 0x00000004u;
}
void pbDetectionEvent::clear_has_detectorid() {
  _has_bits_[0] &= ~0x00000004u;
}
void pbDetectionEvent::clear_detectorid() {
  detectorid_ = 0;
  clear_has_detectorid();
}
 ::google::protobuf::int32 pbDetectionEvent::detectorid() const {
  // @@protoc_insertion_point(field_get:detection.pbDetectionEvent.detectorId)
  return detectorid_;
}
 void pbDetectionEvent::set_detectorid(::google::protobuf::int32 value) {
  set_has_detectorid();
  detectorid_ = value;
  // @@protoc_insertion_point(field_set:detection.pbDetectionEvent.detectorId)
}

// required double energy = 4;
bool pbDetectionEvent::has_energy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void pbDetectionEvent::set_has_energy() {
  _has_bits_[0] |= 0x00000008u;
}
void pbDetectionEvent::clear_has_energy() {
  _has_bits_[0] &= ~0x00000008u;
}
void pbDetectionEvent::clear_energy() {
  energy_ = 0;
  clear_has_energy();
}
 double pbDetectionEvent::energy() const {
  // @@protoc_insertion_point(field_get:detection.pbDetectionEvent.energy)
  return energy_;
}
 void pbDetectionEvent::set_energy(double value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:detection.pbDetectionEvent.energy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbDetectedEvents::kDetectionEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbDetectedEvents::pbDetectedEvents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.pbDetectedEvents)
}

void pbDetectedEvents::InitAsDefaultInstance() {
}

pbDetectedEvents::pbDetectedEvents(const pbDetectedEvents& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.pbDetectedEvents)
}

void pbDetectedEvents::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pbDetectedEvents::~pbDetectedEvents() {
  // @@protoc_insertion_point(destructor:detection.pbDetectedEvents)
  SharedDtor();
}

void pbDetectedEvents::SharedDtor() {
  if (this != default_instance_) {
  }
}

void pbDetectedEvents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pbDetectedEvents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pbDetectedEvents_descriptor_;
}

const pbDetectedEvents& pbDetectedEvents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_detection_2eprotobuf();
  return *default_instance_;
}

pbDetectedEvents* pbDetectedEvents::default_instance_ = NULL;

pbDetectedEvents* pbDetectedEvents::New(::google::protobuf::Arena* arena) const {
  pbDetectedEvents* n = new pbDetectedEvents;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pbDetectedEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:detection.pbDetectedEvents)
  detectionevent_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool pbDetectedEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.pbDetectedEvents)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .detection.pbDetectionEvent detectionEvent = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_detectionEvent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_detectionevent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_detectionEvent;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.pbDetectedEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.pbDetectedEvents)
  return false;
#undef DO_
}

void pbDetectedEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.pbDetectedEvents)
  // repeated .detection.pbDetectionEvent detectionEvent = 1;
  for (unsigned int i = 0, n = this->detectionevent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->detectionevent(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.pbDetectedEvents)
}

::google::protobuf::uint8* pbDetectedEvents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.pbDetectedEvents)
  // repeated .detection.pbDetectionEvent detectionEvent = 1;
  for (unsigned int i = 0, n = this->detectionevent_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->detectionevent(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.pbDetectedEvents)
  return target;
}

int pbDetectedEvents::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:detection.pbDetectedEvents)
  int total_size = 0;

  // repeated .detection.pbDetectionEvent detectionEvent = 1;
  total_size += 1 * this->detectionevent_size();
  for (int i = 0; i < this->detectionevent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->detectionevent(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pbDetectedEvents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:detection.pbDetectedEvents)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const pbDetectedEvents* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const pbDetectedEvents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:detection.pbDetectedEvents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:detection.pbDetectedEvents)
    MergeFrom(*source);
  }
}

void pbDetectedEvents::MergeFrom(const pbDetectedEvents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:detection.pbDetectedEvents)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  detectionevent_.MergeFrom(from.detectionevent_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void pbDetectedEvents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:detection.pbDetectedEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbDetectedEvents::CopyFrom(const pbDetectedEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:detection.pbDetectedEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbDetectedEvents::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->detectionevent())) return false;
  return true;
}

void pbDetectedEvents::Swap(pbDetectedEvents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbDetectedEvents::InternalSwap(pbDetectedEvents* other) {
  detectionevent_.UnsafeArenaSwap(&other->detectionevent_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pbDetectedEvents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pbDetectedEvents_descriptor_;
  metadata.reflection = pbDetectedEvents_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pbDetectedEvents

// repeated .detection.pbDetectionEvent detectionEvent = 1;
int pbDetectedEvents::detectionevent_size() const {
  return detectionevent_.size();
}
void pbDetectedEvents::clear_detectionevent() {
  detectionevent_.Clear();
}
const ::detection::pbDetectionEvent& pbDetectedEvents::detectionevent(int index) const {
  // @@protoc_insertion_point(field_get:detection.pbDetectedEvents.detectionEvent)
  return detectionevent_.Get(index);
}
::detection::pbDetectionEvent* pbDetectedEvents::mutable_detectionevent(int index) {
  // @@protoc_insertion_point(field_mutable:detection.pbDetectedEvents.detectionEvent)
  return detectionevent_.Mutable(index);
}
::detection::pbDetectionEvent* pbDetectedEvents::add_detectionevent() {
  // @@protoc_insertion_point(field_add:detection.pbDetectedEvents.detectionEvent)
  return detectionevent_.Add();
}
::google::protobuf::RepeatedPtrField< ::detection::pbDetectionEvent >*
pbDetectedEvents::mutable_detectionevent() {
  // @@protoc_insertion_point(field_mutable_list:detection.pbDetectedEvents.detectionEvent)
  return &detectionevent_;
}
const ::google::protobuf::RepeatedPtrField< ::detection::pbDetectionEvent >&
pbDetectedEvents::detectionevent() const {
  // @@protoc_insertion_point(field_list:detection.pbDetectedEvents.detectionEvent)
  return detectionevent_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace detection

// @@protoc_insertion_point(global_scope)
